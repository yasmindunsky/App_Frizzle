<!--\n-->
<!--â€™-->

<practice xmlns:tools="http://schemas.android.com/tools"
tools:keep="@xml/practice_2">
    <slide>
        <info_text>When we're building an app, we can add buttons to it.</info_text>
        <task_text/>
        <reminder_text />
        <code show="false" mutable="false" runnable="false" waitForCTA="false"/>
        <design show="true" runnable="false" withOnClickFunction="false" withOnClickSet="false"></design>
        <call_to_action>Got it</call_to_action>
    </slide>


    <slide>
        <info_text/>
        <task_text>Run and see what happens when you click the button.</task_text>
        <reminder_text />
        <code show="false" mutable="false" runnable="false" waitForCTA="false"/>
        <design show="true" runnable="true" withOnClickFunction="false" withOnClickSet="false"></design>
        <call_to_action>Got it</call_to_action>
    </slide>

    <slide>
        <info_text>We'll now learn how to set up the button to speak out text when it is clicked.</info_text>
        <task_text/>
        <reminder_text/>
        <code show="false" mutable="false" runnable="false" waitForCTA="false"/>
        <design show="false" runnable="false" withOnClickFunction="false" withOnClickSet="false"></design>
        <call_to_action>Got it</call_to_action>
    </slide>

    <slide>
        <info_text>To add functionality to our button, we will add a structure to our code called $green$function$green$.</info_text>
        <task_text/>
        <reminder_text/>
        <code show="false" mutable="false" runnable="false" waitForCTA="false"/>
        <design show="false" runnable="false"></design>
        <call_to_action>Got it</call_to_action>
    </slide>

    <slide>
        <info_text>A $green$function$green$ is a structure that wraps $orange$commands$orange$ and has a name. We'll now see how a $green$function$green$ looks.</info_text>
        <task_text/>
        <reminder_text/>
        <code show="false" mutable="false" runnable="false" waitForCTA="false"/>
        <design show="false" runnable="false"/>
        <call_to_action>Got it</call_to_action>
    </slide>

    <slide>
        <info_text>Congratulations, you've earned a $green$function$green$ keyboard key!</info_text>
        <task_text>Use the keyboard to add a $green$function$green$ to the code.</task_text>
        <reminder_text/>
        <code
            show="true"
            mutable="true"
            runnable="false"
            waitForCTA="false" />
        <design
            show="false"
            runnable="false" />
        <call_to_action>Check</call_to_action>
    </slide>

    <slide>
        <info_text>We'll later learn what's the meaning of the text written in white. We won't change it for now.</info_text>
        <task_text/>
        <reminder_text/>
        <code show="true" mutable="false" runnable="false" waitForCTA="false">
function nameYouChoose(){

}
        </code>
        <design show="false" runnable="false"/>
        <call_to_action>Got it</call_to_action>
    </slide>

    <slide>
        <info_text/>
        <task_text>Change the $green$function$green$ name to 'myFunction'.</task_text>
        <reminder_text/>
        <code show="true" mutable="true" runnable="false" waitForCTA="false">function nameYouChoose(){

}
        </code>
        <design show="false" runnable="false"/>
        <call_to_action>Check</call_to_action>
    </slide>

    <slide>
        <info_text/>
        <task_text>Write the $orange$speakOut("Hello") command$orange$ inside the $green$function$green$, between the curly brackets.</task_text>
        <reminder_text/>
        <code show="true" mutable="true" runnable="false" waitForCTA="false">function myFunction(){

}
        </code>
        <design show="false" runnable="false"/>
        <call_to_action>Check</call_to_action>
    </slide>

    <slide>
        <info_text/>
        <task_text>Write the $green$function$green$ name in the onClick field of the button, then run and click the button.</task_text>
        <reminder_text/>
        <code show="true" mutable="false" runnable="false" waitForCTA="false">
function myFunction(){
\tspeakOut("Hello");
}
        </code>
        <design show="true" runnable="true"  withOnClickFunction="myFunction" withOnClickSet="false">myButton</design>
        <call_to_action>Check</call_to_action>
    </slide>

    <!--<slide>-->
        <!--<info_text>Our button now has functionality: it reads text aloud when it is clicked.</info_text>-->
        <!--<task_text>Try to run and click the button.</task_text>-->
        <!--<reminder_text/>-->
        <!--<code show="true" mutable="false" runnable="false" waitForCTA="false">function myFunction(){\n\tspeakOut("Hello");\n}-->
        <!--</code>-->
        <!--<design show="true" runnable="true"  withOnClickFunction="myFunction" withOnClickSet="true">myButton</design>-->
        <!--<call_to_action>Got it</call_to_action>-->
    <!--</slide>-->
</practice>